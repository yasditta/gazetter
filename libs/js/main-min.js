let map,border,citiesCG,earthquakesCG,airportsCG,restaurantsCG,hotelsCG;$(window).on("load",(function(){$(".loader-wrapper").fadeOut("slow"),userLocation()})),map=L.map("map").setView([22,-10],3);const wsm=L.tileLayer("https://server.arcgisonline.com/ArcGIS/rest/services/World_Street_Map/MapServer/tile/{z}/{y}/{x}",{minZoom:2,attribution:"Tiles &copy; Esri &mdash; Source: Esri, DeLorme, NAVTEQ, USGS, Intermap, iPC, NRCAN, Esri Japan, METI, Esri China (Hong Kong), Esri (Thailand), TomTom, 2012"});wsm.addTo(map);const stadiaDark=L.tileLayer("https://tiles.stadiamaps.com/tiles/alidade_smooth_dark/{z}/{x}/{y}{r}.png",{maxZoom:20,minZoom:2,attribution:'&copy; <a href="https://stadiamaps.com/">Stadia Maps</a>, &copy; <a href="https://openmaptiles.org/">OpenMapTiles</a> &copy; <a href="http://openstreetmap.org">OpenStreetMap</a> contributors'});getCountries(),citiesCG=L.markerClusterGroup(),map.addLayer(citiesCG),earthquakesCG=L.markerClusterGroup(),map.addLayer(earthquakesCG),airportsCG=L.markerClusterGroup(),map.addLayer(airportsCG),restaurantsCG=L.markerClusterGroup(),map.addLayer(restaurantsCG),hotelsCG=L.markerClusterGroup(),map.addLayer(hotelsCG);const baseMaps={WSM:wsm,"Stadia Dark":stadiaDark},markerLayers={Cities:citiesCG,Earthquakes:earthquakesCG,Airports:airportsCG,Restaurants:restaurantsCG,Hotels:hotelsCG};L.control.layers(baseMaps,markerLayers).addTo(map).setPosition("bottomright"),L.control.scale().addTo(map);const countryInfoButton=new L.easyButton('<i class="fas fa-info"></i>',(function(){$("#countryModal").modal("show")}),"Country Info");countryInfoButton.addTo(map);const weatherInfoButton=new L.easyButton('<i class="fas fa-cloud-sun"></i>',(function(){$("#weatherModal").modal("show")}),"Weather Info");weatherInfoButton.addTo(map);const newsInfoButton=new L.easyButton('<i class="far fa-newspaper"></i>',(function(){$("#newsModal").modal("show")}),"News Info");newsInfoButton.addTo(map);const cityIcon=L.icon({iconUrl:"images/cityIcon.png",iconSize:[50,50],iconAnchor:[25,45],popupAnchor:[0,-40]}),earthquakeIcon=L.icon({iconUrl:"images/earthquakeIcon.png",iconSize:[50,50],iconAnchor:[25,45],popupAnchor:[0,-40]}),airportIcon=L.icon({iconUrl:"images/airportIcon.png",iconSize:[50,50],iconAnchor:[25,45],popupAnchor:[0,-40]}),restaurantIcon=L.icon({iconUrl:"images/restaurantIcon.png",iconSize:[50,50],iconAnchor:[25,45],popupAnchor:[0,-40]}),hotelIcon=L.icon({iconUrl:"images/hotelIcon.png",iconSize:[50,50],iconAnchor:[25,45],popupAnchor:[0,-40]});function userLocation(){navigator.geolocation||alert("Geolocation is not supported by your browser!"),navigator.geolocation.getCurrentPosition((function(t){const n=t.coords.latitude,a=t.coords.longitude;$.ajax({url:"libs/php/getUserIsoA3.php",type:"POST",dataType:"json",data:{lat:n,lng:a},success:function(t){const n=t.isoA3;$("#select-country").val(n).change()},error:function(t){alert("Error: "+t)}})}),(function(){alert("Unable to retrieve your location!")}))}function getCountries(){$.ajax({url:"libs/php/getCountries.php",type:"POST",dataType:"json",beforeSend:function(){$("#loader").removeClass("hidden")},success:function(t){let n=$("#select-country");t.data.forEach((t=>{"-99"!=t.iso3&&n.append($(`<option value="${t.iso3}">\n                            ${t.name}\n                        </option>`))}))},complete:function(){$("#loader").addClass("hidden")},error:function(t){alert("Error: "+t)}})}function countryInformation(t){$.ajax({url:"libs/php/getCountryInfo.php",type:"POST",dataType:"json",data:{code:t},beforeSend:function(){$("#loader").removeClass("hidden")},success:function(n){const a=n.latlng[0],e=n.latlng[1],o=n.capital;let r=$("#country-info");r.html(""),r.append($(`<div class="card h-100 country">\n                            <img src="${n.flag}" alt="${n.name}"/>\n                    </div>\n                    <div class="card-body country">\n                        <h4><a href="https://en.wikipedia.org/wiki/${n.name}" target="_blank">${n.name}</a></h4>\n                    </div>\n                    <div class="table-country">\n                        <table class="table table-striped table-sm">\n                            <tbody>\n                                <tr>\n                                    <th scope="row">Capital:</th><td>${n.capital}</td>\n                                </tr>\n                                <tr>\n                                    <th scope="row">Population:</th><td>${n.population.toLocaleString("en-US")}</td>\n                                </tr>\n                                <tr>\n                                    <th scope="row">Area:</th><td>${n.area.toLocaleString("en-US")} Km<sup>2</sup></td>\n                                </tr>\n                                <tr>\n                                    <th scotde="row">Currencies:</th><td>${n.currencies.filter((t=>t.name)).map((t=>`${t.name}  (${t.symbol})`)).join(", ")}</td>\n                                </tr>\n                                <tr>\n                                    <th scope="row">Languages:</th><td>${n.languages.map((t=>t.name)).join(", ")}</td>\n                                </tr>\n                                <tr>\n                                    <th scope="row">Region:</th><td>${n.region}</td>\n                                </tr>\n                                <tr>\n                                    <th scope="row">Subregion:</th><td>${n.subregion}</td>\n                                </tr>\n                                <tr>\n                                    <th scope="row">Timezone:</th><td>${n.timezones.map((t=>t)).join(", ")}</td>\n                                <tr>\n                            </tbody>\n                        </table>\n                    </div> `)),$("#countryModal").modal("show"),addWeather(a,e),addNews(o),addBorders(t),addAirports(a,e),addHotels(o)},complete:function(){$("#loader").addClass("hidden")},error:function(t,n){alert("Error: "+n)}})}function addWeather(t,n){$.ajax({url:"libs/php/getWeather.php",type:"POST",dataType:"json",data:{lat:t,lng:n},success:function(t){const n=t.data.daily;let a=$("#weather-today"),e=$("#weather-future");a.html(""),e.html(""),a.append($(`<div class="p-2 weather-current">\n                    <div class="text-center">\n                        <p class="h6 mb-3"><span id="weather-location">${t.data.timezone}</span></p>\n                        <p class="h2 mb-2">${n[0].weather[0].main}</p>\n                        <p class="display-1 mb-0"><strong>${Math.round(n[0].temp.day)}°C</strong></p>\n                        <p class="mb-0"><strong>${Math.round(n[0].temp.max)}°<span id="min-temp"> / ${Math.round(n[0].temp.min)}°</span></strong></p>\n                        <img src="https://openweathermap.org/img/wn/${n[0].weather[0].icon}@2x.png" class="mb-0"/>\n                    </div>\n                </div>`));for(let t=1;t<n.length;t++)e.append($(`<tr>\n                        <th class="align-middle">${window.moment(1e3*n[t].dt).format("ddd, MMM Do")}</th>\n                        <td><img src="https://openweathermap.org/img/wn/${n[t].weather[0].icon}.png" alt="weather icon" id="w-icon"/></td>\n                        <td class="h6 fw-bold align-middle text-end">${Math.round(n[t].temp.max)}° <span id="min-temp"> / ${Math.round(n[t].temp.min)}°</span></td>\n                    </tr>`))},error:function(t,n){alert("Error: "+n)}})}function addNews(t){$.ajax({url:"libs/php/getNews.php",type:"POST",dataType:"json",data:{countryCapital:t},success:function(t){if("ok"==t.status){const n=t.articles;let a=$("#news-info-card");a.html(""),n.forEach((t=>{a.append($(`<div class="col p-2">\n                            <div class="card news h-100">\n                                <img class="card-img" src="${t.urlToImage}" alt="News Image">\n                                <div class="news card-img-overlay d-flex flex-column justify-content-end">\n                                    <h6>${t.source.name}</h6>\n                                    <a href="${t.url}" target="_blank">${t.title}</a>\n                                </div>\n                            </div>\n                        </div>`))}))}},error:function(t,n){}})}function addBorders(t){$.ajax({url:"libs/php/getCountryBorder.php",type:"POST",dataType:"json",data:{isoA3:t},success:function(t){const n=t.data;map.hasLayer(border)&&map.removeLayer(border),border=L.geoJSON(n,{color:"#361999",wheight:14,opacity:1,fillOpacity:.1}).addTo(map),map.fitBounds(border.getBounds());const a=border.getBounds(),e=a.getNorth(),o=a.getSouth(),r=a.getEast(),s=a.getWest(),i=a._southWest.lat,c=a._northEast.lat,d=a._southWest.lng,p=a._northEast.lng;nearByCities(e,o,r,s),getEarthquakes(e,o,r,s),addRestaurants(i,c,d,p)},error:function(t,n){}})}function nearByCities(t,n,a,e){citiesCG.clearLayers(),$.ajax({url:"libs/php/getNearByCities.php",type:"POST",dataType:"json",data:{north:t,south:n,east:a,west:e},success:function(t){t.data.forEach((t=>{const n=L.marker([`${t.lat}`,`${t.lng}`],{icon:cityIcon}).bindPopup(`\n                            <div class="container card h-100">\n                                <table class="table table-sm">\n                                    <thead>\n                                        <tr>\n                                            <th><strong>City</strong></th>\n                                        </tr>\n                                    </thead>\n                                    <tbody>\n                                        <tr>\n                                            <th scope="row">Name:</th> <td class="text-end"> <strong>${t.name}</strong></td>\n                                        </tr>\n                                        <tr>\n                                            <th scope="row">Population:</th> <td class="text-end"> ${t.population.toLocaleString("en-US")}</td>\n                                        </tr>\n                                    </tbody>\n                                </table>\n                            </div>\n                            `);citiesCG.addLayer(n)}))},error:function(t,n){}})}function getEarthquakes(t,n,a,e){earthquakesCG.clearLayers(),$.ajax({url:"libs/php/getEarthquakes.php",type:"POST",dataType:"json",data:{north:t,south:n,east:a,west:e},success:function(t){t.data.forEach((t=>{const n=L.marker([`${t.lat}`,`${t.lng}`],{icon:earthquakeIcon}).bindPopup(`\n                            <div class="container card h-100">\n                                <table class="table table-sm">\n                                    <thead>\n                                        <tr>\n                                            <th><strong>Earthquake</strong></th>\n                                        </tr>\n                                    </thead>\n                                    <tbody>\n                                        <tr>\n                                            <th scope="row">Magnitude:</th> <td class="text-end"><strong>${t.magnitude}</strong></td>\n                                        </tr>\n                                        <tr>\n                                            <th scope="row">Depth:</th> <td class="text-end">${Math.round(t.depth)} Km</td>\n                                        </tr>\n                                        <tr>\n                                            <th scope="row">Date and Time:</th> <td class="text-end">${window.moment(t.datetime).format("MMMM Do YYYY, h:mm:ss A")}<td>\n                                        </tr>\n                                    </tbody>\n                                </table>\n                            <div>`);earthquakesCG.addLayer(n)}))},error:function(t,n){}})}function addAirports(t,n){airportsCG.clearLayers(),$.ajax({url:"libs/php/getAirports.php",type:"POST",dataType:"json",data:{lat:t,lng:n},success:function(t){t.items.forEach((t=>{const n=L.marker([`${t.location.lat}`,`${t.location.lon}`],{icon:airportIcon}).bindPopup(`\n                                <div class="container card h-100">\n                                <table class="table table-sm">\n                                    <thead>\n                                        <tr>\n                                            <th><strong>Airport</strong></th>\n                                        </tr>\n                                    </thead>\n                                    <tbody>\n                                        <tr>\n                                            <th scope="row">Name:</th> <td class="text-end"><strong>${t.name}</strong></td>\n                                        </tr>\n                                        <tr>\n                                            <th scope="row">IATA Code:</th> <td class="text-end">${t.iata}</td>\n                                        </tr>\n                                    </tbody>\n                                </table>\n                            <div>\n                            `);airportsCG.addLayer(n)}))},error:function(t,n){}})}function addRestaurants(t,n,a,e){restaurantsCG.clearLayers(),$.ajax({url:"libs/php/getRestaurants.php",type:"POST",dataType:"json",data:{blLat:t,trLat:n,blLng:a,trLng:e},success:function(t){t.data.forEach((t=>{const n=L.marker([`${t.latitude}`,`${t.longitude}`],{icon:restaurantIcon}).bindPopup(`\n                                <div class="container card h-100">\n                                <table class="table table-sm">\n                                    <thead>\n                                        <tr>\n                                            <th><strong>${t.category.name}</strong></th>\n                                        </tr>\n                                    </thead>\n                                    <tbody>\n                                        <tr>\n                                            <th scope="row">Name:</th> <td class="text-end"><strong>${t.name}</strong></td>\n                                        </tr>\n                                        <tr>\n                                            <th scope="row">Ranking:</th> <td class="text-end">${t.ranking}</td>\n                                        </tr>\n                                        <tr>\n                                            <th scope="row">Rating:</th> <td class="text-end">${t.rating} *<td>\n                                        </tr>\n                                        <tr>\n                                            <th scope="row">Address:</th> <td class="text-end">${t.address}<td>\n                                        </tr>\n                                    </tbody>\n                                </table>\n                            <div>\n                            `);restaurantsCG.addLayer(n)}))},error:function(t,n){}})}function addHotels(t){hotelsCG.clearLayers(),$.ajax({url:"libs/php/getHotels.php",type:"POST",dataType:"json",data:{capital:t},success:function(t){const n=t.suggestions[1].entities;""!=n&&n.forEach((t=>{const n=L.marker([`${t.latitude}`,`${t.longitude}`],{icon:hotelIcon}).bindPopup(`${t.type}<br/>\n                            <strong>${t.name}</strong>`);hotelsCG.addLayer(n)}))},error:function(t,n){}})}function countrySelection(t){countryInformation(t.target.value)}$("#select-country").on("change",countrySelection);